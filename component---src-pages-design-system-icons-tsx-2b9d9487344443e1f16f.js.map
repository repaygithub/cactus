{"version":3,"sources":["webpack:///./src/helpers/iconGroups.ts","webpack:///./src/pages/design-system/icons.tsx","webpack:///./src/components/Text.tsx","webpack:///./node_modules/@repay/cactus-web/dist/Link/Link.js","webpack:///./src/components/Link.tsx"],"names":["iconsCategoryMap","Object","entries","iconsList","filter","fullName","Icon","path","replace","toLowerCase","split","category","name","join","hasOwnProperty","push","categories","keys","sort","title","as","fontSize","href","map","cat","iconList","key","style","textTransform","flexWrap","justifyContent","m","flexBasis","flexDirection","alignItems","mt","mb","Text","styled","space","color","colorStyle","fontFamily","fontWeight","textAlign","fontStyle","lineHeight","letterSpacing","Span","withComponent","_templateObject","data","Link","props","_omitMargins","to","rest","createElement","assign","p","theme","colors","callToAction","mediumContrast","base","transparentCTA","propTypes","string","isRequired","LocalLink","RepayLink","GatsbyLink","startsWith","global","window","location","origin","isOutside"],"mappings":"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","file":"component---src-pages-design-system-icons-tsx-2b9d9487344443e1f16f.js","sourcesContent":["import * as iconsList from '@repay/cactus-icons'\n\ntype IconObject = {\n  name: string\n  fullName: string\n  path: string\n  category: string\n  Icon: React.ComponentType<any>\n}\n\nconst iconsCategoryMap: { [key: string]: IconObject[] } = {}\n\nconst icons = Object.entries(iconsList).filter(([name]) => name !== 'iconSizes')\n\nfor (const [fullName, Icon] of icons) {\n  const path = fullName.replace(/(.)([A-Z])/, '$1-$2').toLowerCase()\n  const [category, ...nameArr] = path.split('-')\n  const name = nameArr.join(' ')\n  if (!iconsCategoryMap.hasOwnProperty(category)) {\n    iconsCategoryMap[category] = []\n  }\n  iconsCategoryMap[category].push({\n    name,\n    fullName,\n    path,\n    category,\n    Icon,\n  })\n}\n\nconst categories = Object.keys(iconsCategoryMap).sort()\n\nexport { iconsCategoryMap, categories }\n","import * as React from 'react'\n\nimport { categories, iconsCategoryMap } from '../../helpers/iconGroups'\nimport { Flex } from '@repay/cactus-web'\nimport Helmet from 'react-helmet'\nimport Link from '../../components/Link'\nimport Text from '../../components/Text'\n\nexport default () => (\n  <>\n    <Helmet title=\"Icons\" />\n    <Text as=\"h1\" fontSize=\"h1\">\n      Icons\n    </Text>\n    <Text>\n      Icons should be descriptive, simple, readable, and consistent. Use them to communicate an\n      action, status, or help separate objects in a list. In other words, icons can represent\n      objects, tools, actions, or desired results.\n    </Text>\n    <Text as=\"h2\" fontSize=\"h2\">\n      Available Icons\n    </Text>\n    <Text>\n      All icons are part of a category based on primary purpose. Some generic icons will by used\n      outside the named purposed due to utility.\n    </Text>\n    <Text>\n      To learn how to use the icons see the <Link href=\"/icons/\">Icons documentation</Link>.\n    </Text>\n    {categories.map(cat => {\n      const iconList = iconsCategoryMap[cat]\n      return (\n        <React.Fragment key={cat}>\n          <Text as=\"h3\" fontSize=\"h3\" style={{ textTransform: 'capitalize' }}>\n            {cat}\n          </Text>\n          <Flex flexWrap=\"wrap\" justifyContent=\"start\">\n            {iconList.map(({ name, path, Icon }) => (\n              <Flex key={path} m={4} flexBasis=\"64px\" flexDirection=\"column\" alignItems=\"center\">\n                <Icon style={{ fontSize: '40px' }} />\n                <Text m={0} fontSize=\"12px\">\n                  {name}\n                </Text>\n              </Flex>\n            ))}\n          </Flex>\n        </React.Fragment>\n      )\n    })}\n    <Text mt={6} mb={5} fontSize=\"h3\">\n      Lastly, the <Link href=\"/design-system/shared-styles/\">shared styles</Link> such as shadows\n      and spacing which round out the foundation.\n    </Text>\n  </>\n)\n","import {\n  color,\n  ColorProps,\n  colorStyle,\n  ColorStyleProps,\n  fontFamily,\n  FontFamilyProps,\n  fontSize,\n  FontSizeProps,\n  fontStyle,\n  FontStyleProps,\n  fontWeight,\n  FontWeightProps,\n  letterSpacing,\n  LetterSpacingProps,\n  lineHeight,\n  LineHeightProps,\n  space,\n  SpaceProps,\n  textAlign,\n  TextAlignProps,\n} from 'styled-system'\nimport styled from 'styled-components'\n\ninterface TextProps\n  extends SpaceProps,\n    FontSizeProps,\n    ColorProps,\n    ColorStyleProps,\n    FontFamilyProps,\n    FontWeightProps,\n    TextAlignProps,\n    FontStyleProps,\n    LineHeightProps,\n    LetterSpacingProps {}\n\nconst Text = styled('p')<TextProps>(\n  space,\n  fontSize,\n  color,\n  colorStyle,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  fontStyle,\n  lineHeight,\n  letterSpacing\n)\n\nexport const Span = Text.withComponent('span')\n\nexport default Text\n","import \"core-js/modules/es6.object.assign\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-style: italic;\\n  outline: none;\\n  position: relative;\\n\\n  :link {\\n    color: \", \";\\n  }\\n\\n  :visited {\\n    color: \", \";\\n  }\\n\\n  :hover {\\n    color: \", \";\\n  }\\n\\n  :focus {\\n    color: \", \";\\n    background-color: \", \";\\n  }\\n\\n  \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { margin } from 'styled-system';\nimport { omitMargins } from '../helpers/omit';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nvar LinkBase = function LinkBase(props) {\n  var _omitMargins = omitMargins(props),\n      to = _omitMargins.to,\n      rest = _objectWithoutProperties(_omitMargins, [\"to\"]);\n\n  return React.createElement(\"a\", Object.assign({\n    href: to\n  }, rest));\n};\n\nexport var Link = styled(LinkBase)(_templateObject(), function (p) {\n  return p.theme.colors.callToAction;\n}, function (p) {\n  return p.theme.colors.mediumContrast;\n}, function (p) {\n  return p.theme.colors.base;\n}, function (p) {\n  return p.theme.colors.callToAction;\n}, function (p) {\n  return p.theme.colors.transparentCTA;\n}, margin); // @ts-ignore\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired\n};\nexport default Link;","import { Link as GatsbyLink } from 'gatsby'\nimport { Link as RepayLink } from '@repay/cactus-web'\nimport React from 'react'\n\nconst LocalLink = RepayLink.withComponent(GatsbyLink)\n\nconst isOutside = (href: string) =>\n  href.startsWith('http') && !(global.window && href.startsWith(window.location.origin))\n\nconst Link = ({ href, to, ...rest }: any) => {\n  to = to || href || ''\n  if (isOutside(to)) {\n    return <RepayLink to={to} {...rest} />\n  }\n  return <LocalLink to={to} {...rest} />\n}\n\nexport default Link\n"],"sourceRoot":""}