// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`component: TextInput should render a disabled input 1`] = `
<DocumentFragment>
  .c1 {
  border: 2px solid hsl(0,0%,90%);
  border-radius: 20px;
  height: 32px;
  outline: none;
  box-sizing: border-box;
  padding: 7px 28px 7px 15px;
  font-size: 18px;
  line-height: 28px;
  width: auto;
  background-color: hsl(0,0%,90%);
}

.c1:focus {
  border-color: hsl(200,96%,35%);
}

.c1::-webkit-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::-moz-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1:-ms-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c0 {
  box-sizing: border-box;
}

<div
    class="c0"
  >
    <input
      class="c1"
      disabled=""
    />
  </div>
</DocumentFragment>
`;

exports[`component: TextInput should render a success input 1`] = `
<DocumentFragment>
  .c1 {
  border: 2px solid hsl(200,10%,20%);
  border-radius: 20px;
  height: 32px;
  outline: none;
  box-sizing: border-box;
  padding: 7px 28px 7px 15px;
  font-size: 18px;
  line-height: 28px;
  width: auto;
  background-color: hsl(0,0%,100%);
  border-color: hsl(145,89%,28%);
  background: hsla(145,89%,28%,0.2);
}

.c1:focus {
  border-color: hsl(200,96%,35%);
}

.c1::-webkit-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::-moz-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1:-ms-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c0 {
  box-sizing: border-box;
}

<div
    class="c0"
  >
    <input
      class="c1"
    />
  </div>
</DocumentFragment>
`;

exports[`component: TextInput should render a text input 1`] = `
<DocumentFragment>
  .c1 {
  border: 2px solid hsl(200,10%,20%);
  border-radius: 20px;
  height: 32px;
  outline: none;
  box-sizing: border-box;
  padding: 7px 28px 7px 15px;
  font-size: 18px;
  line-height: 28px;
  width: auto;
  background-color: hsl(0,0%,100%);
}

.c1:focus {
  border-color: hsl(200,96%,35%);
}

.c1::-webkit-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::-moz-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1:-ms-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c0 {
  box-sizing: border-box;
}

<div
    class="c0"
  >
    <input
      class="c1"
    />
  </div>
</DocumentFragment>
`;

exports[`component: TextInput should render an error input 1`] = `
<DocumentFragment>
  .c1 {
  border: 2px solid hsl(200,10%,20%);
  border-radius: 20px;
  height: 32px;
  outline: none;
  box-sizing: border-box;
  padding: 7px 28px 7px 15px;
  font-size: 18px;
  line-height: 28px;
  width: auto;
  background-color: hsl(0,0%,100%);
  border-color: hsl(353,84%,44%);
  background: hsla(353,84%,44%,0.2);
}

.c1:focus {
  border-color: hsl(200,96%,35%);
}

.c1::-webkit-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::-moz-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1:-ms-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c0 {
  box-sizing: border-box;
}

<div
    class="c0"
  >
    <input
      class="c1"
    />
  </div>
</DocumentFragment>
`;

exports[`component: TextInput should render an input with a placeholder 1`] = `
<DocumentFragment>
  .c1 {
  border: 2px solid hsl(200,10%,20%);
  border-radius: 20px;
  height: 32px;
  outline: none;
  box-sizing: border-box;
  padding: 7px 28px 7px 15px;
  font-size: 18px;
  line-height: 28px;
  width: auto;
  background-color: hsl(0,0%,100%);
}

.c1:focus {
  border-color: hsl(200,96%,35%);
}

.c1::-webkit-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::-moz-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1:-ms-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c0 {
  box-sizing: border-box;
}

<div
    class="c0"
  >
    <input
      class="c1"
      placeholder="hold my place"
    />
  </div>
</DocumentFragment>
`;

exports[`component: TextInput should render an warning input 1`] = `
<DocumentFragment>
  .c1 {
  border: 2px solid hsl(200,10%,20%);
  border-radius: 20px;
  height: 32px;
  outline: none;
  box-sizing: border-box;
  padding: 7px 28px 7px 15px;
  font-size: 18px;
  line-height: 28px;
  width: auto;
  background-color: hsl(0,0%,100%);
  border-color: hsl(47,82%,47%);
  background: hsla(47,82%,47%,0.2);
}

.c1:focus {
  border-color: hsl(200,96%,35%);
}

.c1::-webkit-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::-moz-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1:-ms-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c0 {
  box-sizing: border-box;
}

<div
    class="c0"
  >
    <input
      class="c1"
    />
  </div>
</DocumentFragment>
`;

exports[`component: TextInput should support margin space props 1`] = `
<DocumentFragment>
  .c1 {
  border: 2px solid hsl(200,10%,20%);
  border-radius: 20px;
  height: 32px;
  outline: none;
  box-sizing: border-box;
  padding: 7px 28px 7px 15px;
  font-size: 18px;
  line-height: 28px;
  width: auto;
  background-color: hsl(0,0%,100%);
}

.c1:focus {
  border-color: hsl(200,96%,35%);
}

.c1::-webkit-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::-moz-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1:-ms-input-placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c1::placeholder {
  color: hsl(200,18%,45%);
  font-style: oblique;
}

.c0 {
  box-sizing: border-box;
  margin-top: 16px;
}

<div
    class="c0"
  >
    <input
      class="c1"
    />
  </div>
</DocumentFragment>
`;
