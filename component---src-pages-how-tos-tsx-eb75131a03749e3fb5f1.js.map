{"version":3,"sources":["webpack:///./src/components/Link.tsx","webpack:///./src/pages/how-tos.tsx"],"names":["LocalLink","RepayLink","withComponent","GatsbyLink","Link","href","to","rest","startsWith","global","window","location","origin","isOutside"],"mappings":"qKAIMA,EAAYC,IAAUC,cAAcC,QAWpCC,EAAO,SAAC,GAAyD,IAAvDC,EAAuD,EAAvDA,KAAMC,EAAiD,EAAjDA,GAAOC,EAA0C,6BAErE,OALgB,SAACF,GAAD,OAChBA,EAAKG,WAAW,WAAaC,EAAOC,QAAUL,EAAKG,WAAWE,OAAOC,SAASC,SAI1EC,CADJP,EAAKA,GAAMD,GAAQ,IAEV,kBAAC,IAAD,eAAWC,GAAIA,GAAQC,IAEzB,kBAACP,EAAD,eAAWM,GAAIA,GAAQC,KAGjBH,W,2PCvBf,mCAIe,4BACb,gCACE,2CACA,0BACE,0BACE,gBAAC,IAAD,CAAME,GAAG,gCAAT,uBAEF,0BACE,gBAAC,IAAD,CAAMA,GAAG,mBAAT","file":"component---src-pages-how-tos-tsx-eb75131a03749e3fb5f1.js","sourcesContent":["import { Link as RepayLink } from '@repay/cactus-web'\nimport { Link as GatsbyLink } from 'gatsby'\nimport React from 'react'\n\nconst LocalLink = RepayLink.withComponent(GatsbyLink)\n\ninterface LinkProps {\n  href?: string\n  to?: string\n  [k: string]: any\n}\n\nconst isOutside = (href: string): boolean =>\n  href.startsWith('http') && !(global.window && href.startsWith(window.location.origin))\n\nconst Link = ({ href, to, ...rest }: LinkProps): React.ReactElement => {\n  to = to || href || ''\n  if (isOutside(to)) {\n    return <RepayLink to={to} {...rest} />\n  }\n  return <LocalLink to={to} {...rest} />\n}\n\nexport default Link\n","import * as React from 'react'\n\nimport Link from '../components/Link'\n\nexport default (): React.ReactElement => (\n  <>\n    <h1>How-to Guides</h1>\n    <ul>\n      <li>\n        <Link to=\"/how-tos/end-to-end-testing/\">End-to-End Testing</Link>\n      </li>\n      <li>\n        <Link to=\"/how-tos/forms/\">Making Forms with Formik</Link>\n      </li>\n    </ul>\n  </>\n)\n"],"sourceRoot":""}