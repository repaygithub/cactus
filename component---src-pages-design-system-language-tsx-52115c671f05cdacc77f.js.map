{"version":3,"sources":["webpack:///./src/pages/design-system/language.tsx","webpack:///./node_modules/@repay/cactus-web/dist/Link/Link.js","webpack:///./src/components/Link.tsx"],"names":["Em","styled","em","p","theme","colors","callToAction","title","Item","tiny","href","to","_templateObject","data","Link","props","_omitMargins","rest","createElement","Object","assign","mediumContrast","base","transparentCTA","propTypes","string","isRequired","LocalLink","RepayLink","withComponent","GatsbyLink","startsWith","global","window","location","origin","isOutside"],"mappings":"6FAAA,oEAQMA,EARN,UAQWC,QAAOC,GAAV,mEAAGD,CAAH,kDAGG,SAAAE,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,gBAGhB,qBACb,OACE,gCACE,gBAAC,IAAD,CAAQC,MAAM,oBACd,oDACA,mPAKA,+CACA,8RAKA,gBAAC,IAAD,KACE,gBAAC,IAAKC,KAAN,CAAWC,KAAM,GACf,mCACA,uSAOF,gBAAC,IAAKD,KAAN,CAAWC,KAAM,GACf,wCACA,oOAGmC,oCAHnC,qCAMF,gBAAC,IAAKD,KAAN,CAAWC,KAAM,GACf,uCACA,uOAMF,gBAAC,IAAKD,KAAN,CAAWC,KAAM,GACf,sCACA,iQAOJ,gDACA,kEACA,uEAC6C,gBAACT,EAAD,sBAD7C,qEAEyC,gBAACA,EAAD,mBAFzC,8HAIM,gBAACA,EAAD,cAJN,mHAK4C,gBAACA,EAAD,kBAL5C,oHAMmF,IACjF,gBAACA,EAAD,kBAPF,uHAQ4C,IAC1C,gBAAC,IAAD,CAAMU,KAAK,sCAAX,sBATF,oBAWA,+DACqC,gBAAC,IAAD,CAAMC,GAAG,8BAAT,cAAwD,IAD7F,wB,kCC9EN,sJAIA,SAASC,IACP,IAAIC,EAAO,YAAuB,CAAC,6FAA8F,sCAAuC,oCAAqC,oCAAqC,4BAA6B,eAAgB,QAM/R,OAJAD,EAAkB,WAChB,OAAOC,GAGFA,EAST,IAUWC,EAAO,mBAVH,SAAkBC,GAC/B,IAAIC,EAAe,YAAYD,GAC3BJ,EAAKK,EAAaL,GAClBM,EAAO,YAAyBD,EAAc,CAAC,OAEnD,OAAO,IAAME,cAAc,IAAKC,OAAOC,OAAO,CAC5CV,KAAMC,GACLM,MAGa,CAAiBL,KAAmB,SAAUT,GAC9D,OAAOA,EAAEC,MAAMC,OAAOC,gBACrB,SAAUH,GACX,OAAOA,EAAEC,MAAMC,OAAOgB,kBACrB,SAAUlB,GACX,OAAOA,EAAEC,MAAMC,OAAOiB,QACrB,SAAUnB,GACX,OAAOA,EAAEC,MAAMC,OAAOC,gBACrB,SAAUH,GACX,OAAOA,EAAEC,MAAMC,OAAOkB,iBACrB,KAEHT,EAAKU,UAAY,CACfb,GAAI,IAAUc,OAAOC,a,sKCvCvB,IAAMC,EAAYC,IAAUC,cAAcC,QAKpChB,EAAO,SAAC,GAA+B,IAA7BJ,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,GAAOM,E,oIAAgB,kBAE3C,OALgB,SAACP,GAAD,OAChBA,EAAKqB,WAAW,WAAaC,EAAOC,QAAUvB,EAAKqB,WAAWE,OAAOC,SAASC,SAI1EC,CADJzB,EAAKA,GAAMD,GAAQ,IAEV,kBAAC,IAAD,eAAWC,GAAIA,GAAQM,IAEzB,kBAACU,EAAD,eAAWhB,GAAIA,GAAQM,KAGjBH,W","file":"component---src-pages-design-system-language-tsx-52115c671f05cdacc77f.js","sourcesContent":["import * as React from 'react'\n\nimport { Flex } from '@repay/cactus-web'\nimport Grid from '../../../../modules/cactus-web/src/Grid/Grid'\nimport Helmet from 'react-helmet'\nimport Link from '../../components/Link'\nimport styled from 'styled-components'\n\nconst Em = styled.em`\n  font-style: normal;\n  font-weight: 600;\n  color: ${p => p.theme.colors.callToAction};\n`\n\nexport default () => {\n  return (\n    <>\n      <Helmet title=\"Design Language\" />\n      <h1>Cactus Design Language</h1>\n      <p>\n        Our system is built based on the atomic design approach. It provides guidelines, reusable UI\n        components, and visual styles. Everything you need to deliver a clear, consistent visual\n        experience across all platforms.\n      </p>\n      <h2>Design Principles</h2>\n      <p>\n        Our priorities are based on creating a clear design, with consistent patterns that are\n        intuitive and reusable, for a solid and timeless experience. These 4 principles serve as a\n        foundation for our design and creative process. They are our fundamental truth.\n      </p>\n      <Grid>\n        <Grid.Item tiny={6}>\n          <h4>Clear</h4>\n          <p>\n            An easy to perceive and understand design. It should take minimal effort to identify a\n            component or navigate the interface. The text is legible at every size, icons are\n            well-defined and obvious. Color is monochrome and minimal. Components are accessible by\n            default.\n          </p>\n        </Grid.Item>\n        <Grid.Item tiny={6}>\n          <h4>Consistent</h4>\n          <p>\n            A consistent interface is one of our key principles both in design and experience.\n            Consistency is the thread that ties together elements in a single design and across\n            multiple platforms. This ensures <i>clarity</i> between applications and pages.\n          </p>\n        </Grid.Item>\n        <Grid.Item tiny={6}>\n          <h4>Intuitive</h4>\n          <p>\n            A design is intuitive when users can focus on a task at hand without stopping. An\n            intuitive design directs attention to important tasks which creates an easy-to-use\n            product and frictionless experience.\n          </p>\n        </Grid.Item>\n        <Grid.Item tiny={6}>\n          <h4>Reusable</h4>\n          <p>\n            Our design goal is to create a library with reusable components and behaviors. Instances\n            of the same component can be used throuout the interface to streamline development and\n            reduce the need for users to re-learn or remember.\n          </p>\n        </Grid.Item>\n      </Grid>\n      <h2>Design Methodology</h2>\n      <p>Designing with an atomic methodology.</p>\n      <p>\n        Repay visual design is constructed with an <Em>Atomic Design</Em> approach. The creation of\n        our structure begins by establishing a <Em>foundation</Em> of shared styles: Colors,\n        Typography, Icons, Grid System. Then we describe the basic building blocks that will create\n        our <Em>atoms</Em>: text inputs, buttons, and other form elements. Multiple atoms bound\n        together with the same purpose create our <Em>molecules</Em>: form fields (label and input),\n        tables, batch cards, notification messages, etc. Atoms and molecules compose our{' '}\n        <Em>organisms</Em>: navigation, sidebars, and carousel payment actions. For more information\n        on the Atomic Design methodology, see the{' '}\n        <Link href=\"http://atomicdesign.bradfrost.com/\">book by Brad Frost</Link> who created it.\n      </p>\n      <p>\n        Next, we'll present and dicuss our <Link to=\"/design-system/foundation/\">foundation</Link>{' '}\n        of design tokens.\n      </p>\n    </>\n  )\n}\n","import \"core-js/modules/es6.object.assign\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-style: italic;\\n  outline: none;\\n  position: relative;\\n\\n  :link {\\n    color: \", \";\\n  }\\n\\n  :visited {\\n    color: \", \";\\n  }\\n\\n  :hover {\\n    color: \", \";\\n  }\\n\\n  :focus {\\n    color: \", \";\\n    background-color: \", \";\\n  }\\n\\n  \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { margin } from 'styled-system';\nimport { omitMargins } from '../helpers/omit';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nvar LinkBase = function LinkBase(props) {\n  var _omitMargins = omitMargins(props),\n      to = _omitMargins.to,\n      rest = _objectWithoutProperties(_omitMargins, [\"to\"]);\n\n  return React.createElement(\"a\", Object.assign({\n    href: to\n  }, rest));\n};\n\nexport var Link = styled(LinkBase)(_templateObject(), function (p) {\n  return p.theme.colors.callToAction;\n}, function (p) {\n  return p.theme.colors.mediumContrast;\n}, function (p) {\n  return p.theme.colors.base;\n}, function (p) {\n  return p.theme.colors.callToAction;\n}, function (p) {\n  return p.theme.colors.transparentCTA;\n}, margin); // @ts-ignore\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired\n};\nexport default Link;","import { Link as GatsbyLink } from 'gatsby'\nimport { Link as RepayLink } from '@repay/cactus-web'\nimport React from 'react'\n\nconst LocalLink = RepayLink.withComponent(GatsbyLink)\n\nconst isOutside = (href: string) =>\n  href.startsWith('http') && !(global.window && href.startsWith(window.location.origin))\n\nconst Link = ({ href, to, ...rest }: any) => {\n  to = to || href || ''\n  if (isOutside(to)) {\n    return <RepayLink to={to} {...rest} />\n  }\n  return <LocalLink to={to} {...rest} />\n}\n\nexport default Link\n"],"sourceRoot":""}