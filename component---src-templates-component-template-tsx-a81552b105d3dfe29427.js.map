{"version":3,"sources":["webpack:///./src/templates/ComponentTemplate.tsx","webpack:///../node_modules/gatsby-mdx/mdx-renderer.js","webpack:///../node_modules/@babel/runtime/helpers/construct.js","webpack:///../node_modules/@babel/runtime/helpers/setPrototypeOf.js"],"names":["ComponentTemplate","_ref","data","db","docgenDb","_data$mdx","mdx","code","fields","database","JSON","parse","e","console","error","react__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","title","_components_DocgenProvider__WEBPACK_IMPORTED_MODULE_3__","docs","gatsby_mdx_mdx_renderer__WEBPACK_IMPORTED_MODULE_4___default","body","pageQuery","React","require","useMDXComponents","useMDXScope","module","exports","scope","components","children","props","_objectWithoutPropertiesLoose","mdxComponents","mdxScope","fullScope","_objectSpread","keys","Object","values","map","key","End","_construct","Function","concat","apply","createElement","setPrototypeOf","__webpack_require__","Parent","args","Class","Reflect","construct","sham","Proxy","Date","prototype","toString","call","isNativeReflectConstruct","push","instance","bind","arguments","_setPrototypeOf","o","p","__proto__"],"mappings":"sMAgBMA,EAAoB,SAAAC,GAAsC,IAAnCC,EAAmCD,EAAnCC,KAEbC,EAEVD,EAFFE,SAAYD,GAFgDE,EAI1DH,EADFI,IAAOC,EAHqDF,EAGrDE,KAAMC,EAH+CH,EAG/CG,OAGXC,EAAsB,GAC1B,IACEA,EAAWC,KAAKC,MAAMR,GACtB,MAAOS,GACPC,QAAQC,MAAMF,GAGhB,OACEG,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAAC,EAAD,CAAQC,MAAK,GAAKV,EAAOU,QACzBH,EAAA,cAACI,EAAA,EAAD,CAAgBC,KAAMX,GACpBM,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACM,EAAAJ,EAAD,KAAcV,EAAKe,UAOdtB,4MAER,IAAMuB,EAAS,gSC3ChBC,EAAQC,EAAQ,KACYA,EAAQ,IAAlCC,qBAAkBpB,QAClBqB,EAAgBF,EAAQ,IAAxBE,YAERC,EAAOC,QAAU,SAAA5B,GAKd,IAJD6B,EAIC7B,EAJD6B,MACAC,EAGC9B,EAHD8B,WACAC,EAEC/B,EAFD+B,SACGC,EACFC,EAAAjC,EAAA,mCACKkC,EAAgBT,EAAiBK,GACjCK,EAAWT,EAAYG,GAE7B,IAAKE,EACH,OAAO,KAGT,IAAMK,EAASC,EAAA,CAGbd,QACAlB,OACG8B,GAICG,EAAOC,OAAOD,KAAKF,GACnBI,EAASF,EAAKG,IAAI,SAAAC,GAAG,OAAIN,EAAUM,KAGnCC,EAFEC,EAAOC,SAAP,CAAgB,OAAhBC,OAA0BR,EAA1B,IAAmCP,KAE7BgB,WAAF,GAAG,IAAHD,OAAUN,IACtB,OAAOjB,EAAMyB,cAAcL,EAApBN,EAAA,CAA2BP,WAAYI,GAAkBF,0BC/BlE,IAAAiB,EAAqBC,EAAQ,KAe7B,SAAAN,EAAAO,EAAAC,EAAAC,GAcA,OA3BA,WACA,uBAAAC,kBAAAC,UAAA,SACA,GAAAD,QAAAC,UAAAC,KAAA,SACA,sBAAAC,MAAA,SAEA,IAEA,OADAC,KAAAC,UAAAC,SAAAC,KAAAP,QAAAC,UAAAG,KAAA,mBACA,EACG,MAAA/C,GACH,UAKAmD,GAGAnC,EAAAC,QAAAgB,EAAA,SAAAO,EAAAC,EAAAC,GACA,IAAArC,EAAA,OACAA,EAAA+C,KAAAhB,MAAA/B,EAAAoC,GACA,IACAY,EAAA,IADAnB,SAAAoB,KAAAlB,MAAAI,EAAAnC,IAGA,OADAqC,GAAAJ,EAAAe,EAAAX,EAAAM,WACAK,GARArC,EAAAC,QAAAgB,EAAAU,QAAAC,UAYAX,EAAAG,MAAA,KAAAmB,WAGAvC,EAAAC,QAAAgB,qBChCA,SAAAuB,EAAAC,EAAAC,GAMA,OALA1C,EAAAC,QAAAuC,EAAA5B,OAAAU,gBAAA,SAAAmB,EAAAC,GAEA,OADAD,EAAAE,UAAAD,EACAD,GAGAD,EAAAC,EAAAC,GAGA1C,EAAAC,QAAAuC","file":"component---src-templates-component-template-tsx-a81552b105d3dfe29427.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport DocgenProvider, { DocItem } from '../components/DocgenProvider'\nimport MDXRenderer from 'gatsby-mdx/mdx-renderer'\n\ntype ComponentTemplateProps = {\n  data: {\n    docgenDb: {\n      id: string\n      db: string\n    }\n    mdx: Markdown\n  }\n}\n\nconst ComponentTemplate = ({ data }: ComponentTemplateProps) => {\n  const {\n    docgenDb: { db },\n    mdx: { code, fields },\n  } = data\n\n  let database: DocItem[] = []\n  try {\n    database = JSON.parse(db)\n  } catch (e) {\n    console.error(e)\n  }\n\n  return (\n    <>\n      <Helmet title={`${fields.title}`} />\n      <DocgenProvider docs={database}>\n        <>\n          <MDXRenderer>{code.body}</MDXRenderer>\n        </>\n      </DocgenProvider>\n    </>\n  )\n}\n\nexport default ComponentTemplate\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    docgenDb {\n      id\n      db\n    }\n    mdx(fields: { slug: { eq: $slug } }) {\n      code {\n        body\n      }\n      fields {\n        title\n        slug\n      }\n    }\n  }\n`\n","const React = require(\"react\");\nconst { useMDXComponents, mdx } = require(\"@mdx-js/react\");\nconst { useMDXScope } = require(\"./context\");\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components);\n  const mdxScope = useMDXScope(scope);\n\n  if (!children) {\n    return null;\n  }\n\n  const fullScope = {\n    // React is here just in case the user doesn't pass them in\n    // in a manual usage of the renderer\n    React,\n    mdx,\n    ...mdxScope\n  };\n\n  // children is pre-compiled mdx\n  const keys = Object.keys(fullScope);\n  const values = keys.map(key => fullScope[key]);\n  const fn = new Function(\"_fn\", ...keys, `${children}`);\n\n  const End = fn({}, ...values);\n  return React.createElement(End, { components: mdxComponents, ...props });\n};\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;"],"sourceRoot":""}