{"componentChunkName":"component---src-templates-generic-template-tsx","path":"/getting-started/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"order\": 1\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Getting Started with a New Application\"), mdx(\"p\", null, \"The best way to get started with Cactus, is to use our CLI \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@repay/create-ui\"), \". This tool provides a basic configuration and structure to start implementing a website using all the cactus resources.\"), mdx(\"h2\", null, \"Using the CLI\"), mdx(\"p\", null, \"The CLI will generate a boilerplate with a basic configuration depending on the arguments you pass or the answers you provide to the prompts. The options are\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Argument\"), mdx(\"th\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Action\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"<app-name>\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"The name for your app. You\\u2019ll find the generated code under a folder with this name\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"--javascript\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Generate the app with javascript configuration\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"--typescript\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Generate the app with typescript configuration\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"--git, -g\")), mdx(\"td\", _extends({\n    parentName: \"tr\"\n  }, {\n    \"align\": null\n  }), \"Initialize a git repository\")))), mdx(\"p\", null, \"For example:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"create-repay-ui myapp --typescript -g\\n\")), mdx(\"p\", null, \"Will generate an app under \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"myapp\"), \" folder, with typescript and a git repository.\"), mdx(\"h2\", null, \"Installing the CLI\"), mdx(\"p\", null, \"To start, you will need to add the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@repay/create-ui\"), \" globally:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"yarn global add @repay/create-ui\\n\")), mdx(\"p\", null, \"After this is done, you are free to use the tool as described above\"), mdx(\"p\", null, \"We recommend you use \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Yarn\"), \" instead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"NPM\"), \" since all the dependencies are handle through \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Yarn\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"title":"Getting Started with a New Application","slug":"/getting-started/"}}},"pageContext":{"slug":"/getting-started/"}},"staticQueryHashes":["3276690975"]}