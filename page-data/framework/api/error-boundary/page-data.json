{"componentChunkName":"component---src-templates-generic-template-tsx","path":"/framework/api/error-boundary/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Error Boundary\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ErrorBoundary\"), \" component will catch and handle uncaught errors in its children.\"), mdx(\"h2\", null, \"Using the Error Boundary Component\"), mdx(\"h3\", null, \"Props\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Prop\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Required\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default Value\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onError\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Y\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Function of the form \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"(error, info) => void\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"N/A\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"errorView\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"N\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Function of the form \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"({ error, info }) => React.Element\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"undefined\"))))), mdx(\"h3\", null, \"Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import React from 'react'\\nimport { ErrorBoundary } from '@repay/cactus-fwk'\\nimport { PossiblyErrorProneComponent } from 'somewhere/in/your/app'\\n\\nexport default function Container() {\\n  const handleError = (error, info) => {\\n    // Send error to Sentry/another API to record it\\n  }\\n\\n  const errorView = ({ error, info }) => (\\n    <div>\\n      <h2>Whoops! Something went wrong on this page.</h2>\\n      <span>{error.message}</span>\\n    </div>\\n  )\\n\\n  return (\\n    <ErrorBoundary onError={handleError} errorView={errorView}>\\n      <PossiblyErrorProneComponent />\\n    </ErrorBoundary>\\n  )\\n}\\n\")), mdx(\"h2\", null, \"Global Error Handling\"), mdx(\"p\", null, \"The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AppRoot\"), \" component uses \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"ErrorBoundary\"), \" to accomplish global error handling.\"), mdx(\"h3\", null, \"Props for Global Error Handling\"), mdx(\"p\", null, \"These props can be passed to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"AppRoot\"), \" to get the most out of the global error handling capabilities:\"), mdx(\"table\", null, mdx(\"thead\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"thead\"\n  }, mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Prop\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Required\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Type\"), mdx(\"th\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Default Value\"))), mdx(\"tbody\", {\n    parentName: \"table\"\n  }, mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"onError\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"N\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Function of the form \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"(error, info) => void\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"noop function\")), mdx(\"tr\", {\n    parentName: \"tbody\"\n  }, mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"globalErrorView\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"N\"), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, \"Function of the form \", mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"({ error, info }) => React.Element\")), mdx(\"td\", {\n    parentName: \"tr\",\n    \"align\": null\n  }, mdx(\"inlineCode\", {\n    parentName: \"td\"\n  }, \"undefined\"))))), mdx(\"h3\", null, \"Global Example\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import React from 'react'\\nimport AppRoot from '@repay/cactus-fwk'\\n\\nexport default function MainContainer() {\\n  const handleError = (error, info) => {\\n    // Send error to Sentry/another API to record it\\n  }\\n\\n  const errorView = ({ error, info }) => (\\n    <div>\\n      <h2>Whoops! Something went wrong with our app.</h2>\\n      <span>{error.message}</span>\\n    </div>\\n  )\\n\\n  return (\\n    <AppRoot onError={handleError} globalErrorView={errorView}>\\n      {/* Rest of application */}\\n    </AppRoot>\\n  )\\n}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"title":"Error Boundary","slug":"/framework/api/error-boundary/"}}},"pageContext":{"slug":"/framework/api/error-boundary/"}},"staticQueryHashes":["3276690975"]}