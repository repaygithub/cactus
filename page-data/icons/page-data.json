{"componentChunkName":"component---src-templates-generic-template-tsx","path":"/icons/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Cactus Icons\",\n  \"order\": 5\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Cactus Design System Icons\"), mdx(\"p\", null, \"The Cactus Design System contains a set of icons as React components to use within projects.\"), mdx(\"h2\", null, \"Quick Links\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    to: \"./available-icons\"\n  }, \"Available Icons\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/repaygithub/cactus/tree/master/modules/cactus-icons\"\n  }, \"Source Code\"))), mdx(\"h2\", null, \"Getting Started\"), mdx(\"p\", null, \"Install via node based package manager\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\"\n  }, \"yarn add --dev @repay/cactus-icons\\n\")), mdx(\"p\", null, \"Import all the icons or each icon individually and render as jsx elements.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-jsx\"\n  }, \"import ActionAdd from '@repay/cactus-icons/i/actions-add'\\nimport { ActionsDelete, ActionsGear } from '@repay/cactus-icons'\\n\\nexport default (props) => (\\n  <div>\\n    <button>\\n      <ActionsAdd />\\n    </button>\\n    <button>\\n      <ActionsDelete />\\n    </button>\\n    <button>\\n      <ActionsGear />\\n    </button>\\n  </div>\\n)\\n\")), mdx(\"p\", null, \"Next see the \", mdx(\"a\", {\n    to: \"./available-icons\"\n  }, \"Available Icons\"), \" for the published icons in the set.\"));\n}\n;\nMDXContent.isMDXComponent = true;","fields":{"title":"Cactus Icons","slug":"/icons/"}}},"pageContext":{"slug":"/icons/"}},"staticQueryHashes":["3276690975"]}