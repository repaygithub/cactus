{"version":3,"sources":["webpack:///./src/pages/design-system/icons.tsx","webpack:///./src/components/Link.tsx","webpack:///./src/components/Text.tsx","webpack:///./src/helpers/iconGroups.ts"],"names":["__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_1__","_components_Text__WEBPACK_IMPORTED_MODULE_5__","as","fontSize","_components_Link__WEBPACK_IMPORTED_MODULE_4__","href","categories","map","cat","iconList","iconsCategoryMap","key","style","textTransform","_repay_cactus_web__WEBPACK_IMPORTED_MODULE_3__","flexWrap","justifyContent","_ref","name","path","Icon","m","flexBasis","flexDirection","alignItems","mt","mb","LocalLink","RepayLink","withComponent","GatsbyLink","Link","to","rest","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","startsWith","global","window","location","origin","isOutside","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_repay_cactus_web__WEBPACK_IMPORTED_MODULE_5__","Object","assign","Text","styled","space","color","colorStyle","fontFamily","fontWeight","textAlign","fontStyle","lineHeight","letterSpacing","Span","_i","_Object$entries","entries","icons","length","_Object$entries$_i","fullName","replace","toLowerCase","_path$split","split","category","slice","join","hasOwnProperty","push","keys","sort"],"mappings":"qJAOeA,EAAA,0BACbC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAKC,SAAS,MAAvB,SAGAH,EAAA,cAACC,EAAA,EAAD,uOAKAD,EAAA,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAKC,SAAS,MAAvB,mBAGAH,EAAA,cAACC,EAAA,EAAD,8IAIAD,EAAA,cAACC,EAAA,EAAD,8CACwCD,EAAA,cAACI,EAAA,EAAD,CAAMC,KAAK,WAAX,uBADxC,KAGCC,IAAWC,IAAI,SAAAC,GACd,IAAMC,EAAWC,IAAiBF,GAClC,OACER,EAAA,cAACA,EAAA,SAAD,CAAgBW,IAAKH,GACnBR,EAAA,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAKC,SAAS,KAAKS,MAAO,CAAEC,cAAe,eACjDL,GAEHR,EAAA,cAACc,EAAA,EAAD,CAAMC,SAAS,OAAOC,eAAe,SAClCP,EAASF,IAAI,SAAAU,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,KAAMC,EAAfH,EAAeG,KAAf,OACZpB,EAAA,cAACc,EAAA,EAAD,CAAMH,IAAKQ,EAAME,EAAG,EAAGC,UAAU,OAAOC,cAAc,SAASC,WAAW,UACxExB,EAAA,cAACoB,EAAD,CAAMR,MAAO,CAAET,SAAU,UACzBH,EAAA,cAACC,EAAA,EAAD,CAAMoB,EAAG,EAAGlB,SAAS,QAClBe,UAQflB,EAAA,cAACC,EAAA,EAAD,CAAMwB,GAAI,EAAGC,GAAI,EAAGvB,SAAS,MAA7B,eACcH,EAAA,cAACI,EAAA,EAAD,CAAMC,KAAK,iCAAX,iBADd,yLC3CEsB,EAAYC,IAAUC,cAAcC,KAKpCC,EAAO,SAAAd,GAAgC,IAA7BZ,EAA6BY,EAA7BZ,KAAM2B,EAAuBf,EAAvBe,GAAOC,EAAgBC,IAAAjB,EAAA,eAE3C,OALgB,SAACZ,GAAD,OAChBA,EAAK8B,WAAW,WAAaC,EAAOC,QAAUhC,EAAK8B,WAAWE,OAAOC,SAASC,SAI1EC,CADJR,EAAKA,GAAM3B,GAAQ,IAEVoC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAWd,GAAIA,GAAQC,IAEzBQ,EAAAC,EAAAC,cAAChB,EAADkB,OAAAC,OAAA,CAAWd,GAAIA,GAAQC,KAGjBF,yRCmBTgB,EAAOC,kBAAO,IAAPA,CACXC,IACA9C,IACA+C,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGWC,EAAOX,EAAKlB,cAAc,2LAExBkB,+UCvCf,gBAFMrC,EAAoD,GAE1DiD,EAAA,EAAAC,EAA+Bf,OAAOgB,QAAQC,GAA9CH,EAAAC,EAAAG,OAAAJ,IAAsD,KAAAK,EAAAJ,EAAAD,GAA1CM,EAA0CD,EAAA,GAAhC5C,EAAgC4C,EAAA,GAC9C7C,EAAO8C,EAASC,QAAQ,aAAc,SAASC,cADDC,EAErBjD,EAAKkD,MAAM,KAAnCC,EAF6CF,EAAA,GAG9ClD,EAH8CkD,EAAAG,MAAA,GAG/BC,KAAK,KACrB9D,EAAiB+D,eAAeH,KACnC5D,EAAiB4D,GAAY,IAE/B5D,EAAiB4D,GAAUI,KAAK,CAC9BxD,OACA+C,WACA9C,OACAmD,WACAlD,SAIJ,IAAMd,EAAauC,OAAO8B,KAAKjE,GAAkBkE","file":"component---src-pages-design-system-icons-tsx-f6bf21dbf79b330ecc84.js","sourcesContent":["import * as React from 'react'\n\nimport { categories, iconsCategoryMap } from '../../helpers/iconGroups'\nimport { Flex } from '@repay/cactus-web'\nimport Link from '../../components/Link'\nimport Text from '../../components/Text'\n\nexport default () => (\n  <>\n    <Text as=\"h1\" fontSize=\"h1\">\n      Icons\n    </Text>\n    <Text>\n      Icons should be descriptive, simple, readable, and consistent. Use them to communicate an\n      action, status, or help separate objects in a list. In other words, icons can represent\n      objects, tools, actions, or desired results.\n    </Text>\n    <Text as=\"h2\" fontSize=\"h2\">\n      Available Icons\n    </Text>\n    <Text>\n      All icons are part of a category based on primary purpose. Some generic icons will by used\n      outside the named purposed due to utility.\n    </Text>\n    <Text>\n      To learn how to use the icons see the <Link href=\"/icons/\">Icons documentation</Link>.\n    </Text>\n    {categories.map(cat => {\n      const iconList = iconsCategoryMap[cat]\n      return (\n        <React.Fragment key={cat}>\n          <Text as=\"h3\" fontSize=\"h3\" style={{ textTransform: 'capitalize' }}>\n            {cat}\n          </Text>\n          <Flex flexWrap=\"wrap\" justifyContent=\"start\">\n            {iconList.map(({ name, path, Icon }) => (\n              <Flex key={path} m={4} flexBasis=\"64px\" flexDirection=\"column\" alignItems=\"center\">\n                <Icon style={{ fontSize: '40px' }} />\n                <Text m={0} fontSize=\"12px\">\n                  {name}\n                </Text>\n              </Flex>\n            ))}\n          </Flex>\n        </React.Fragment>\n      )\n    })}\n    <Text mt={6} mb={5} fontSize=\"h3\">\n      Lastly, the <Link href=\"/design-system/shared-styles/\">shared styles</Link> such as shadows\n      and spacing which round out the foundation.\n    </Text>\n  </>\n)\n","import { Link as GatsbyLink } from 'gatsby'\nimport { Link as RepayLink } from '@repay/cactus-web'\nimport React from 'react'\n\nconst LocalLink = RepayLink.withComponent(GatsbyLink)\n\nconst isOutside = (href: string) =>\n  href.startsWith('http') && !(global.window && href.startsWith(window.location.origin))\n\nconst Link = ({ href, to, ...rest }: any) => {\n  to = to || href || ''\n  if (isOutside(to)) {\n    return <RepayLink to={to} {...rest} />\n  }\n  return <LocalLink to={to} {...rest} />\n}\n\nexport default Link\n","import {\n  color,\n  ColorProps,\n  colorStyle,\n  ColorStyleProps,\n  fontFamily,\n  FontFamilyProps,\n  fontSize,\n  FontSizeProps,\n  fontStyle,\n  FontStyleProps,\n  fontWeight,\n  FontWeightProps,\n  letterSpacing,\n  LetterSpacingProps,\n  lineHeight,\n  LineHeightProps,\n  space,\n  SpaceProps,\n  textAlign,\n  TextAlignProps,\n} from 'styled-system'\nimport styled from 'styled-components'\n\ninterface TextProps\n  extends SpaceProps,\n    FontSizeProps,\n    ColorProps,\n    ColorStyleProps,\n    FontFamilyProps,\n    FontWeightProps,\n    TextAlignProps,\n    FontStyleProps,\n    LineHeightProps,\n    LetterSpacingProps {}\n\nconst Text = styled('p')<TextProps>(\n  space,\n  fontSize,\n  color,\n  colorStyle,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  fontStyle,\n  lineHeight,\n  letterSpacing\n)\n\nexport const Span = Text.withComponent('span')\n\nexport default Text\n","import * as icons from '@repay/cactus-icons'\n\ntype IconObject = {\n  name: string\n  fullName: string\n  path: string\n  category: string\n  Icon: React.ComponentType<any>\n}\n\nconst iconsCategoryMap: { [key: string]: IconObject[] } = {}\n\nfor (const [fullName, Icon] of Object.entries(icons)) {\n  const path = fullName.replace(/(.)([A-Z])/, '$1-$2').toLowerCase()\n  const [category, ...nameArr] = path.split('-')\n  const name = nameArr.join(' ')\n  if (!iconsCategoryMap.hasOwnProperty(category)) {\n    iconsCategoryMap[category] = []\n  }\n  iconsCategoryMap[category].push({\n    name,\n    fullName,\n    path,\n    category,\n    Icon,\n  })\n}\n\nconst categories = Object.keys(iconsCategoryMap).sort()\n\nexport { iconsCategoryMap, categories }\n"],"sourceRoot":""}