{"version":3,"sources":["webpack:///./src/pages/icons/available-icons.tsx","webpack:///./src/components/Text.tsx","webpack:///./src/helpers/iconGroups.ts"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","_helpers_iconGroups__WEBPACK_IMPORTED_MODULE_1__","_components_Box__WEBPACK_IMPORTED_MODULE_2__","styled_components__WEBPACK_IMPORTED_MODULE_3__","_components_Text__WEBPACK_IMPORTED_MODULE_4__","Code","styled","code","withConfig","displayName","componentId","Pre","pre","p","theme","space","colors","lightGray","importFromRootCode","trim","importIndividually","as","fontSize","categories","map","cat","iconList","iconsCategoryMap","key","style","textTransform","flexWrap","justifyContent","_ref","fullName","path","Icon","m","flexBasis","flexDirection","alignItems","Text","color","colorStyle","fontFamily","fontWeight","textAlign","fontStyle","lineHeight","letterSpacing","Span","withComponent","_i","_Object$entries","Object","entries","icons","length","_Object$entries$_i","replace","toLowerCase","_path$split","split","category","name","slice","join","hasOwnProperty","push","keys","sort"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,IAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,KAOMQ,EAAOC,UAAOC,KAAVC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,yCAKJK,EAAML,UAAOM,IAAVJ,WAAA,CAAAC,YAAA,uBAAAC,YAAA,YAAGJ,CAAH,wCACI,SAAAO,GAAC,OAAIA,EAAEC,MAAMC,MAAM,IACV,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,YAGpCC,EAAqB,uNAUzBC,OAEIC,EAAqB,oRAWzBD,OAEapB,EAAA,0BACbC,EAAA,cAAAA,EAAA,cACEA,EAAA,cAACI,EAAA,EAAD,CAAMiB,GAAG,KAAKC,SAAS,MAAvB,mBAGAtB,EAAA,cAACI,EAAA,EAAD,+EACAJ,EAAA,cAACI,EAAA,EAAD,+BACAJ,EAAA,cAACW,EAAD,KAAMO,GACNlB,EAAA,cAACI,EAAA,EAAD,mCACAJ,EAAA,cAACW,EAAD,KAAMS,GACNpB,EAAA,cAACI,EAAA,EAAD,2GAICmB,IAAWC,IAAI,SAAAC,GACd,IAAMC,EAAWC,IAAiBF,GAClC,OACEzB,EAAA,cAACA,EAAA,SAAD,CAAgB4B,IAAKH,GACnBzB,EAAA,cAACI,EAAA,EAAD,CAAMiB,GAAG,KAAKC,SAAS,KAAKO,MAAO,CAAEC,cAAe,eACjDL,GAEHzB,EAAA,cAACE,EAAA,EAAD,CAAM6B,SAAS,OAAOC,eAAe,SAClCN,EAASF,IAAI,SAAAS,GAAA,IAAGC,EAAHD,EAAGC,SAAUC,EAAbF,EAAaE,KAAMC,EAAnBH,EAAmBG,KAAnB,OACZpC,EAAA,cAACE,EAAA,EAAD,CAAM0B,IAAKO,EAAME,EAAG,EAAGC,UAAU,OAAOC,cAAc,SAASC,WAAW,UACxExC,EAAA,cAACoC,EAAD,CAAMP,MAAO,CAAEP,SAAU,UACzBtB,EAAA,cAACI,EAAA,EAAD,CAAMiC,EAAG,EAAGf,SAAS,QAClBY,GAEHlC,EAAA,cAACK,EAAD,WAAU8B,qGClCpBM,EAAOnC,kBAAO,IAAPA,CACXS,IACAO,IACAoB,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGWC,EAAOT,EAAKU,cAAc,2LAExBV,+UCvCf,gBAFMd,EAAoD,GAE1DyB,EAAA,EAAAC,EAA+BC,OAAOC,QAAQC,GAA9CJ,EAAAC,EAAAI,OAAAL,IAAsD,KAAAM,EAAAL,EAAAD,GAA1ClB,EAA0CwB,EAAA,GAAhCtB,EAAgCsB,EAAA,GAC9CvB,EAAOD,EAASyB,QAAQ,aAAc,SAASC,cADDC,EAErB1B,EAAK2B,MAAM,KAAnCC,EAF6CF,EAAA,GAG9CG,EAH8CH,EAAAI,MAAA,GAG/BC,KAAK,KACrBvC,EAAiBwC,eAAeJ,KACnCpC,EAAiBoC,GAAY,IAE/BpC,EAAiBoC,GAAUK,KAAK,CAC9BJ,OACA9B,WACAC,OACA4B,WACA3B,SAIJ,IAAMb,EAAa+B,OAAOe,KAAK1C,GAAkB2C","file":"component---src-pages-icons-available-icons-tsx-bb165ac5dcb264e4615d.js","sourcesContent":["import * as React from 'react'\n\nimport { categories, iconsCategoryMap } from '../../helpers/iconGroups'\nimport { Flex } from '../../components/Box'\nimport styled from 'styled-components'\nimport Text from '../../components/Text'\n\nconst Code = styled.code`\n  white-space: nowrap;\n  font-size: 9.6px;\n`\n\nconst Pre = styled.pre`\n  padding: ${p => p.theme.space[4]}px;\n  background-color: ${p => p.theme.colors.lightGray};\n`\n\nconst importFromRootCode = `\nimport * as React from 'react'\nimport { ActionsAdd, ActionsDelete } from '@repay/cactus-icons'\n\nexport default () => (\n  <React.Fragment>\n    <ActionsAdd />\n    <ActionsDelete />\n  </React.Fragment>\n)\n`.trim()\n\nconst importIndividually = `\nimport * as React from 'react'\nimport ActionsAdd from '@repay/cactus-icons/i/actions-add'\nimport ActionsDelete from '@repay/cactus-icons/i/actions-delete'\n\nexport default () => (\n  <React.Fragment>\n    <ActionsAdd />\n    <ActionsDelete />\n  </React.Fragment>\n)\n`.trim()\n\nexport default () => (\n  <>\n    <Text as=\"h1\" fontSize=\"h1\">\n      Available Icons\n    </Text>\n    <Text>The icon library allows icons to be imported in two different manners.</Text>\n    <Text>From the root by name:</Text>\n    <Pre>{importFromRootCode}</Pre>\n    <Text>Individually by file path:</Text>\n    <Pre>{importIndividually}</Pre>\n    <Text>\n      See below for the list of available icons and the names and paths by which they can be\n      referenced.\n    </Text>\n    {categories.map(cat => {\n      const iconList = iconsCategoryMap[cat]\n      return (\n        <React.Fragment key={cat}>\n          <Text as=\"h3\" fontSize=\"h3\" style={{ textTransform: 'capitalize' }}>\n            {cat}\n          </Text>\n          <Flex flexWrap=\"wrap\" justifyContent=\"start\">\n            {iconList.map(({ fullName, path, Icon }) => (\n              <Flex key={path} m={4} flexBasis=\"64px\" flexDirection=\"column\" alignItems=\"center\">\n                <Icon style={{ fontSize: '40px' }} />\n                <Text m={0} fontSize=\"12px\">\n                  {fullName}\n                </Text>\n                <Code>/i/{path}</Code>\n              </Flex>\n            ))}\n          </Flex>\n        </React.Fragment>\n      )\n    })}\n  </>\n)\n","import {\n  color,\n  ColorProps,\n  colorStyle,\n  ColorStyleProps,\n  fontFamily,\n  FontFamilyProps,\n  fontSize,\n  FontSizeProps,\n  fontStyle,\n  FontStyleProps,\n  fontWeight,\n  FontWeightProps,\n  letterSpacing,\n  LetterSpacingProps,\n  lineHeight,\n  LineHeightProps,\n  space,\n  SpaceProps,\n  textAlign,\n  TextAlignProps,\n} from 'styled-system'\nimport styled from 'styled-components'\n\ninterface TextProps\n  extends SpaceProps,\n    FontSizeProps,\n    ColorProps,\n    ColorStyleProps,\n    FontFamilyProps,\n    FontWeightProps,\n    TextAlignProps,\n    FontStyleProps,\n    LineHeightProps,\n    LetterSpacingProps {}\n\nconst Text = styled('p')<TextProps>(\n  space,\n  fontSize,\n  color,\n  colorStyle,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  fontStyle,\n  lineHeight,\n  letterSpacing\n)\n\nexport const Span = Text.withComponent('span')\n\nexport default Text\n","import * as icons from '@repay/cactus-icons'\n\ntype IconObject = {\n  name: string\n  fullName: string\n  path: string\n  category: string\n  Icon: React.ComponentType<any>\n}\n\nconst iconsCategoryMap: { [key: string]: IconObject[] } = {}\n\nfor (const [fullName, Icon] of Object.entries(icons)) {\n  const path = fullName.replace(/(.)([A-Z])/, '$1-$2').toLowerCase()\n  const [category, ...nameArr] = path.split('-')\n  const name = nameArr.join(' ')\n  if (!iconsCategoryMap.hasOwnProperty(category)) {\n    iconsCategoryMap[category] = []\n  }\n  iconsCategoryMap[category].push({\n    name,\n    fullName,\n    path,\n    category,\n    Icon,\n  })\n}\n\nconst categories = Object.keys(iconsCategoryMap).sort()\n\nexport { iconsCategoryMap, categories }\n"],"sourceRoot":""}