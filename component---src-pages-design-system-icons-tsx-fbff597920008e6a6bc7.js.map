{"version":3,"sources":["webpack:///./src/pages/design-system/icons.tsx","webpack:///./src/components/Link.tsx","webpack:///./src/components/Text.tsx","webpack:///../modules/cactus-web/dist/Link/Link.js","webpack:///./src/helpers/iconGroups.ts"],"names":["title","as","fontSize","href","categories","map","cat","iconList","iconsCategoryMap","key","style","textTransform","flexWrap","justifyContent","name","path","Icon","m","flexBasis","flexDirection","alignItems","mt","mb","LocalLink","RepayLink","withComponent","GatsbyLink","Link","to","rest","startsWith","global","window","location","origin","isOutside","Text","styled","space","color","colorStyle","fontFamily","fontWeight","textAlign","fontStyle","lineHeight","letterSpacing","Span","_templateObject","data","_taggedTemplateLiteral","props","_omitMargins","omitMargins","_objectWithoutProperties","React","createElement","Object","assign","p","theme","colors","callToAction","mediumContrast","base","transparentCTA","margin","propTypes","PropTypes","string","isRequired","entries","iconsList","filter","fullName","replace","toLowerCase","split","category","join","hasOwnProperty","push","keys","sort"],"mappings":"6KAQe,4BACb,gCACE,gBAAC,IAAD,CAAQA,MAAM,UACd,gBAAC,IAAD,CAAMC,GAAG,KAAKC,SAAS,MAAvB,SAGA,gBAAC,IAAD,uOAKA,gBAAC,IAAD,CAAMD,GAAG,KAAKC,SAAS,MAAvB,mBAGA,gBAAC,IAAD,8IAIA,gBAAC,IAAD,8CACwC,gBAAC,IAAD,CAAMC,KAAK,WAAX,uBADxC,KAGCC,IAAWC,KAAI,SAACC,GACf,IAAMC,EAAWC,IAAiBF,GAClC,OACE,gBAAC,WAAD,CAAgBG,IAAKH,GACnB,gBAAC,IAAD,CAAML,GAAG,KAAKC,SAAS,KAAKQ,MAAO,CAAEC,cAAe,eACjDL,GAEH,gBAAC,IAAD,CAAMM,SAAS,OAAOC,eAAe,SAClCN,EAASF,KAAI,gBAAGS,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,KAAf,OACZ,gBAAC,IAAD,CAAMP,IAAKM,EAAME,EAAG,EAAGC,UAAU,OAAOC,cAAc,SAASC,WAAW,UACxE,gBAACJ,EAAD,CAAMN,MAAO,CAAER,SAAU,UACzB,gBAAC,IAAD,CAAMe,EAAG,EAAGf,SAAS,QAClBY,YAQf,gBAAC,IAAD,CAAMO,GAAI,EAAGC,GAAI,EAAGpB,SAAS,MAA7B,eACc,gBAAC,IAAD,CAAMC,KAAK,iCAAX,iBADd,mE,+HC7CJ,IAAMoB,EAAYC,IAAUC,cAAcC,QAKpCC,EAAO,SAAC,GAA+B,IAA7BxB,EAA6B,EAA7BA,KAAMyB,EAAuB,EAAvBA,GAAOC,E,oIAAgB,kBAE3C,OALgB,SAAC1B,GAAD,OAChBA,EAAK2B,WAAW,WAAaC,EAAOC,QAAU7B,EAAK2B,WAAWE,OAAOC,SAASC,SAI1EC,CADJP,EAAKA,GAAMzB,GAAQ,IAEV,kBAAC,IAAD,eAAWyB,GAAIA,GAAQC,IAEzB,kBAACN,EAAD,eAAWK,GAAIA,GAAQC,KAGjBF,M,sRCmBTS,EAAOC,kBAAO,KAAV,uDAAGA,CACXC,IACApC,IACAqC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,IACAC,KAGWC,EAAOX,EAAKX,cAAc,a,8KAExBW,W,sUChDf,SAASY,IACP,IAAIC,EAAOC,YAAuB,CAAC,6FAA8F,sCAAuC,oCAAqC,oCAAqC,4BAA6B,eAAgB,QAM/R,OAJAF,EAAkB,WAChB,OAAOC,GAGFA,EAST,IAUWtB,EAAOU,mBAVH,SAAkBc,GAC/B,IAAIC,EAAeC,YAAYF,GAC3BvB,EAAKwB,EAAaxB,GAClBC,EAAOyB,YAAyBF,EAAc,CAAC,OAEnD,OAAoBG,IAAMC,cAAc,IAAKC,OAAOC,OAAO,CACzDvD,KAAMyB,GACLC,OAGU,0DAAGQ,CAAiBW,KAAmB,SAAUW,GAC9D,OAAOA,EAAEC,MAAMC,OAAOC,gBACrB,SAAUH,GACX,OAAOA,EAAEC,MAAMC,OAAOE,kBACrB,SAAUJ,GACX,OAAOA,EAAEC,MAAMC,OAAOG,QACrB,SAAUL,GACX,OAAOA,EAAEC,MAAMC,OAAOC,gBACrB,SAAUH,GACX,OAAOA,EAAEC,MAAMC,OAAOI,iBACrBC,U,8LAEHvC,EAAKwC,UAAY,CACfvC,GAAIwC,IAAUC,OAAOC,iB,mXChCjB9D,EAAoD,GAI1D,EAFciD,OAAOc,QAAQC,GAAWC,QAAO,kBAAqB,cAArB,QAE/C,wDAAsC,6FAA1BC,EAA0B,KAAhB1D,EAAgB,KAC9BD,EAAO2D,EAASC,QAAQ,aAAc,SAASC,cADjB,EAEL7D,EAAK8D,MAAM,KAAnCC,EAF6B,KAG9BhE,EAH8B,WAGfiE,KAAK,KACrBvE,EAAiBwE,eAAeF,KACnCtE,EAAiBsE,GAAY,IAE/BtE,EAAiBsE,GAAUG,KAAK,CAC9BnE,OACA4D,WACA3D,OACA+D,WACA9D,SAIJ,IAAMZ,EAAaqD,OAAOyB,KAAK1E,GAAkB2E,Y","file":"component---src-pages-design-system-icons-tsx-fbff597920008e6a6bc7.js","sourcesContent":["import { Flex } from '@repay/cactus-web'\nimport * as React from 'react'\nimport Helmet from 'react-helmet'\n\nimport Link from '../../components/Link'\nimport Text from '../../components/Text'\nimport { categories, iconsCategoryMap } from '../../helpers/iconGroups'\n\nexport default () => (\n  <>\n    <Helmet title=\"Icons\" />\n    <Text as=\"h1\" fontSize=\"h1\">\n      Icons\n    </Text>\n    <Text>\n      Icons should be descriptive, simple, readable, and consistent. Use them to communicate an\n      action, status, or help separate objects in a list. In other words, icons can represent\n      objects, tools, actions, or desired results.\n    </Text>\n    <Text as=\"h2\" fontSize=\"h2\">\n      Available Icons\n    </Text>\n    <Text>\n      All icons are part of a category based on primary purpose. Some generic icons will by used\n      outside the named purposed due to utility.\n    </Text>\n    <Text>\n      To learn how to use the icons see the <Link href=\"/icons/\">Icons documentation</Link>.\n    </Text>\n    {categories.map((cat) => {\n      const iconList = iconsCategoryMap[cat]\n      return (\n        <React.Fragment key={cat}>\n          <Text as=\"h3\" fontSize=\"h3\" style={{ textTransform: 'capitalize' }}>\n            {cat}\n          </Text>\n          <Flex flexWrap=\"wrap\" justifyContent=\"start\">\n            {iconList.map(({ name, path, Icon }) => (\n              <Flex key={path} m={4} flexBasis=\"64px\" flexDirection=\"column\" alignItems=\"center\">\n                <Icon style={{ fontSize: '40px' }} />\n                <Text m={0} fontSize=\"12px\">\n                  {name}\n                </Text>\n              </Flex>\n            ))}\n          </Flex>\n        </React.Fragment>\n      )\n    })}\n    <Text mt={6} mb={5} fontSize=\"h3\">\n      Lastly, the <Link href=\"/design-system/shared-styles/\">shared styles</Link> such as shadows\n      and spacing which round out the foundation.\n    </Text>\n  </>\n)\n","import { Link as RepayLink } from '@repay/cactus-web'\nimport { Link as GatsbyLink } from 'gatsby'\nimport React from 'react'\n\nconst LocalLink = RepayLink.withComponent(GatsbyLink)\n\nconst isOutside = (href: string) =>\n  href.startsWith('http') && !(global.window && href.startsWith(window.location.origin))\n\nconst Link = ({ href, to, ...rest }: any) => {\n  to = to || href || ''\n  if (isOutside(to)) {\n    return <RepayLink to={to} {...rest} />\n  }\n  return <LocalLink to={to} {...rest} />\n}\n\nexport default Link\n","import styled from 'styled-components'\nimport {\n  color,\n  ColorProps,\n  colorStyle,\n  ColorStyleProps,\n  fontFamily,\n  FontFamilyProps,\n  fontSize,\n  FontSizeProps,\n  fontStyle,\n  FontStyleProps,\n  fontWeight,\n  FontWeightProps,\n  letterSpacing,\n  LetterSpacingProps,\n  lineHeight,\n  LineHeightProps,\n  space,\n  SpaceProps,\n  textAlign,\n  TextAlignProps,\n} from 'styled-system'\n\ninterface TextProps\n  extends SpaceProps,\n    FontSizeProps,\n    ColorProps,\n    ColorStyleProps,\n    FontFamilyProps,\n    FontWeightProps,\n    TextAlignProps,\n    FontStyleProps,\n    LineHeightProps,\n    LetterSpacingProps {}\n\nconst Text = styled('p')<TextProps>(\n  space,\n  fontSize,\n  color,\n  colorStyle,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  fontStyle,\n  lineHeight,\n  letterSpacing\n)\n\nexport const Span = Text.withComponent('span')\n\nexport default Text\n","import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-style: italic;\\n  outline: none;\\n  position: relative;\\n\\n  :link {\\n    color: \", \";\\n  }\\n\\n  :visited {\\n    color: \", \";\\n  }\\n\\n  :hover {\\n    color: \", \";\\n  }\\n\\n  :focus {\\n    color: \", \";\\n    background-color: \", \";\\n  }\\n\\n  \", \";\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { margin } from 'styled-system';\nimport { omitMargins } from '../helpers/omit';\n\nvar LinkBase = function LinkBase(props) {\n  var _omitMargins = omitMargins(props),\n      to = _omitMargins.to,\n      rest = _objectWithoutProperties(_omitMargins, [\"to\"]);\n\n  return /*#__PURE__*/React.createElement(\"a\", Object.assign({\n    href: to\n  }, rest));\n};\n\nexport var Link = styled(LinkBase)(_templateObject(), function (p) {\n  return p.theme.colors.callToAction;\n}, function (p) {\n  return p.theme.colors.mediumContrast;\n}, function (p) {\n  return p.theme.colors.base;\n}, function (p) {\n  return p.theme.colors.callToAction;\n}, function (p) {\n  return p.theme.colors.transparentCTA;\n}, margin); // @ts-ignore\n\nLink.propTypes = {\n  to: PropTypes.string.isRequired\n};\nexport default Link;","import * as iconsList from '@repay/cactus-icons'\n\ntype IconObject = {\n  name: string\n  fullName: string\n  path: string\n  category: string\n  Icon: React.ComponentType<any>\n}\n\nconst iconsCategoryMap: { [key: string]: IconObject[] } = {}\n\nconst icons = Object.entries(iconsList).filter(([name]) => name !== 'iconSizes')\n\nfor (const [fullName, Icon] of icons) {\n  const path = fullName.replace(/(.)([A-Z])/, '$1-$2').toLowerCase()\n  const [category, ...nameArr] = path.split('-')\n  const name = nameArr.join(' ')\n  if (!iconsCategoryMap.hasOwnProperty(category)) {\n    iconsCategoryMap[category] = []\n  }\n  iconsCategoryMap[category].push({\n    name,\n    fullName,\n    path,\n    category,\n    Icon,\n  })\n}\n\nconst categories = Object.keys(iconsCategoryMap).sort()\n\nexport { iconsCategoryMap, categories }\n"],"sourceRoot":""}