{"version":3,"sources":["webpack:///./src/pages/stories.tsx","webpack:///./src/components/Link.tsx"],"names":["to","storybookConfig","map","story","key","name","dirname","LocalLink","RepayLink","withComponent","GatsbyLink","Link","href","rest","startsWith","global","window","location","origin","isOutside"],"mappings":"6FAAA,+CAKe,4BACb,gCACE,wCACA,mEACyC,gBAAC,IAAD,CAAMA,GAAG,4BAAT,aAAqD,IAD9F,+JAKA,0BACGC,EAAgBC,KACf,SAACC,GAAD,OACE,sBAAIC,IAAKD,EAAME,MACb,gBAAC,IAAD,CAAML,GAAE,gDAAkDG,EAAMG,QAAxD,KACLH,EAAME,c,4GCdfE,EAAYC,IAAUC,cAAcC,QAWpCC,EAAO,SAAC,GAAyD,IAAvDC,EAAuD,EAAvDA,KAAMZ,EAAiD,EAAjDA,GAAOa,EAA0C,6BAErE,OALgB,SAACD,GAAD,OAChBA,EAAKE,WAAW,WAAaC,EAAOC,QAAUJ,EAAKE,WAAWE,OAAOC,SAASC,SAI1EC,CADJnB,EAAKA,GAAMY,GAAQ,IAEV,kBAAC,IAAD,eAAWZ,GAAIA,GAAQa,IAEzB,kBAACN,EAAD,eAAWP,GAAIA,GAAQa,KAGjBF,W","file":"component---src-pages-stories-tsx-c58e3a7223f22351f326.js","sourcesContent":["import * as React from 'react'\n\nimport Link from '../components/Link'\nimport storybookConfig from '../storybook-config.json'\n\nexport default (): React.ReactElement => (\n  <>\n    <h1>Storybooks</h1>\n    <p>\n      For some libraries, we developed using <Link to=\"https://storybook.js.org\">Storybook</Link>{' '}\n      which is an open source tool to help with the development of UI components. Visit one of the\n      links below to experiment with the libraries and adjust props.\n    </p>\n    <ul>\n      {storybookConfig.map(\n        (story): React.ReactElement => (\n          <li key={story.name}>\n            <Link to={`https://repaygithub.github.io/cactus/stories/${story.dirname}/`}>\n              {story.name}\n            </Link>\n          </li>\n        )\n      )}\n    </ul>\n  </>\n)\n","import { Link as RepayLink } from '@repay/cactus-web'\nimport { Link as GatsbyLink } from 'gatsby'\nimport React from 'react'\n\nconst LocalLink = RepayLink.withComponent(GatsbyLink)\n\ninterface LinkProps {\n  href?: string\n  to?: string\n  [k: string]: any\n}\n\nconst isOutside = (href: string): boolean =>\n  href.startsWith('http') && !(global.window && href.startsWith(window.location.origin))\n\nconst Link = ({ href, to, ...rest }: LinkProps): React.ReactElement => {\n  to = to || href || ''\n  if (isOutside(to)) {\n    return <RepayLink to={to} {...rest} />\n  }\n  return <LocalLink to={to} {...rest} />\n}\n\nexport default Link\n"],"sourceRoot":""}