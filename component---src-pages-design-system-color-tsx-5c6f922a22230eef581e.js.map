{"version":3,"sources":["webpack:///./src/components/Text.tsx","webpack:///./src/pages/design-system/color.tsx"],"names":["Text","styled","space","fontSize","color","colorStyle","fontFamily","fontWeight","textAlign","lineHeight","letterSpacing","Span","withComponent","upperCaseFirst","word","charAt","toUpperCase","slice","extraStyles","borderRadius","ColorDisplay","_ref","hslaStr","displayName","textColor","hasDisplayName","Boolean","cactusTheme","colors","hasOwnProperty","isCactusColor","c","Color","_c$array","array","hue","saturation","luminosity","alpha","isWhite","react","Box","pt","px","pb","mb","width","bg","borderWidth","borderStyle","borderColor","mediumGray","style","hex","ColorBox","_ref2","name","title","children","variant","colorStyles","py","backgroundColor","PaletteBox","_ref3","map","item","index","length","undefined","__webpack_exports__","Helmet_default","a","display","justifyContent","flexWrap","maxWidth","m","components_Text","margin","gatsby_browser_entry","to"],"mappings":"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","file":"component---src-pages-design-system-color-tsx-5c6f922a22230eef581e.js","sourcesContent":["import styled from 'styled-components'\nimport {\n  space,\n  fontSize,\n  color,\n  colorStyle,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing,\n  SpaceProps,\n  FontSizeProps,\n  ColorProps,\n  ColorStyleProps,\n  FontFamilyProps,\n  FontWeightProps,\n  TextAlignProps,\n  LineHeightProps,\n  LetterSpacingProps,\n} from 'styled-system'\n\ninterface TextProps\n  extends SpaceProps,\n    FontSizeProps,\n    ColorProps,\n    ColorStyleProps,\n    FontFamilyProps,\n    FontWeightProps,\n    TextAlignProps,\n    LineHeightProps,\n    LetterSpacingProps {}\n\nconst Text = styled('p')<TextProps>(\n  space,\n  fontSize,\n  color,\n  colorStyle,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  lineHeight,\n  letterSpacing\n)\n\nexport const Span = Text.withComponent('span')\n\nexport default Text\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport Color from 'color'\nimport Box from '../../components/Box'\nimport Text from '../../components/Text'\nimport { Link } from 'gatsby'\nimport cactusTheme, { ColorVariant, CactusColor } from '@repay/cactus-theme'\n\nconst upperCaseFirst = (word: string) => word.charAt(0).toUpperCase() + word.slice(1)\n\nconst extraStyles: React.CSSProperties = { textAlign: 'right', borderRadius: '4px' }\n\ntype ColorDisplayProps = {\n  displayName?: string\n  color: CactusColor | string\n  textColor?: CactusColor | string\n}\n\nfunction isCactusColor(color: string): color is CactusColor {\n  return cactusTheme.colors.hasOwnProperty(color)\n}\n\nfunction ColorDisplay({ displayName, color, textColor }: ColorDisplayProps) {\n  const hasDisplayName = Boolean(displayName)\n  let hslaStr: string\n  if (isCactusColor(color)) {\n    hslaStr = cactusTheme.colors[color]\n  } else {\n    hslaStr = color\n  }\n  let c = Color(hslaStr)\n  let [hue, saturation, luminosity, alpha] = c.array()\n  const isWhite = hue === 0 && saturation === 0 && luminosity === 100\n  return (\n    <Box\n      pt={hasDisplayName ? 4 : 3}\n      px={3}\n      pb={3}\n      mb={hasDisplayName ? 0 : '-4px'}\n      width=\"100%\"\n      color={textColor}\n      bg={color}\n      borderWidth=\"1px\"\n      borderStyle=\"solid\"\n      borderColor={isWhite ? cactusTheme.colors.mediumGray : color}\n      style={extraStyles}\n    >\n      {hasDisplayName && (\n        <>\n          <span>#{displayName}</span>\n          <br />\n        </>\n      )}\n      <span>Hex {c.hex().slice(1)}</span>\n      <br />\n      <span>\n        H{hue} S{saturation} L{luminosity} A{alpha}\n      </span>\n    </Box>\n  )\n}\n\ntype ColorBoxProps = {\n  name: ColorVariant\n  title?: string\n  children?: React.ReactNode\n}\n\nfunction ColorBox({ name, title, children }: ColorBoxProps) {\n  let displayName = title || upperCaseFirst(name)\n  let variant = cactusTheme.colorStyles[name]\n  return (\n    <Box px={4} py={3} width=\"240px\">\n      <ColorDisplay\n        displayName={displayName}\n        color={variant.backgroundColor}\n        textColor={variant.color}\n      />\n      {children}\n    </Box>\n  )\n}\n\ntype PaletteItem = {\n  bg: CactusColor\n  color: CactusColor\n}\n\ntype PaletteBoxProps = {\n  colors: PaletteItem[]\n  title: string\n  children?: React.ReactNode\n}\n\nfunction PaletteBox({ colors, title, children }: PaletteBoxProps) {\n  return (\n    <Box px={4} py={3} width=\"240px\">\n      {colors.map((item, index) => (\n        <ColorDisplay\n          displayName={index === colors.length ? title : undefined}\n          color={item.bg}\n          textColor={item.color}\n        />\n      ))}\n      {children}\n    </Box>\n  )\n}\n\nexport default () => {\n  return (\n    <>\n      <Helmet title=\"Color\" />\n      <h1>Color</h1>\n      <p>\n        The first foundation is Color which is one of the most important aspects of our platform.\n        Based on REPAY having many white-labelled products, we carefully thought of a strategy so we\n        can achieve the same look and feel and meet the accessibility standards.\n      </p>\n      <Box display=\"flex\" justifyContent=\"center\" flexWrap=\"wrap\" maxWidth=\"1200px\" m=\"0 auto\">\n        <ColorBox name=\"base\" />\n        <ColorBox name=\"callToAction\" />\n        <ColorBox name=\"standard\" title=\"White\" />\n        <ColorBox name=\"lightContrast\" />\n        <ColorBox name=\"darkestContrast\" />\n        <ColorBox name=\"success\" />\n        <ColorBox name=\"error\" />\n        <ColorBox name=\"warning\" />\n        <ColorBox name=\"disable\" />\n      </Box>\n      <h2>Color Scheme</h2>\n      <p>\n        The standard Cactus color scheme is based on a monochromatic palette and a complementary\n        action scheme. All the colors of the monochromatic scheme are based on one factor (HUE) and\n        the rest will be variations (brightness and saturation).\n      </p>\n      <h3 style={{ fontWeight: 400 }}>Monochromatic Scheme</h3>\n      <Box display=\"flex\" justifyContent=\"center\" flexWrap=\"wrap\" maxWidth=\"1200px\" m=\"0 auto\">\n        <ColorBox name=\"base\">\n          <h4>Base Color</h4>\n          <Text fontSize=\"small\">\n            This color will be the base of the color scheme and will be common throughout the\n            product. As the base, it will define the rest of the palette.\n          </Text>\n        </ColorBox>\n        <ColorBox name=\"callToAction\">\n          <h4>Call to Action</h4>\n          <Text fontSize=\"small\">\n            It is a variation of our base color; the standard scheme has a dark base and this color\n            as additional luminosity / lightness. This is an accent color and is used infrequently\n            to draw attention and imply an action.\n          </Text>\n        </ColorBox>\n        <ColorBox name=\"standard\" title=\"White\">\n          <h4>White</h4>\n          <Text fontSize=\"small\">\n            White is a common color and will be used throughout to balance and harmonize the scheme.\n          </Text>\n        </ColorBox>\n        <ColorBox name=\"lightContrast\">\n          <h4>Light Contrast</h4>\n          <Text fontSize=\"small\">\n            Contrast colors are founded on the base color, but desaturated and built on a scale.\n          </Text>\n        </ColorBox>\n        <ColorBox name=\"darkestContrast\">\n          <h4>Darkest Contrast</h4>\n          <Text fontSize=\"small\">A dark and desaturated version of the base color.</Text>\n        </ColorBox>\n        <ColorBox name=\"success\">\n          <h4>Green</h4>\n          <Text fontSize=\"small\">\n            This color is part of our intuitive scheme, so green will mean success and positive\n            outcomes.\n          </Text>\n        </ColorBox>\n        <ColorBox name=\"error\">\n          <h4>Red</h4>\n          <Text fontSize=\"small\">\n            This color is part of our intuitive scheme, so red will mean error and negative.\n          </Text>\n        </ColorBox>\n        <ColorBox name=\"warning\">\n          <h4>Yellow</h4>\n          <Text fontSize=\"small\">\n            This color is part of our intuitive scheme, yellow will indicate warning and bringing to\n            attention but moderate.\n          </Text>\n        </ColorBox>\n        <ColorBox name=\"disable\">\n          <h4>Gray</h4>\n          <Text fontSize=\"small\">\n            The fully desaturated gray color indicates disabled or not yet available.\n          </Text>\n        </ColorBox>\n      </Box>\n      <h2>Color Application</h2>\n      <p>\n        Colors must be used in a consistent manor throughout the application to solidify the design\n        language and guide the user.\n      </p>\n      <Box display=\"flex\" justifyContent=\"center\" flexWrap=\"wrap\" maxWidth=\"1200px\" margin=\"0 auto\">\n        <ColorBox name=\"base\">\n          <h4>Base Color</h4>\n          <Text fontSize=\"small\">Headers, standard buttons, selection controls, hover states</Text>\n        </ColorBox>\n        <ColorBox name=\"callToAction\">\n          <h4>Call to Action</h4>\n          <Text fontSize=\"small\">Call to action buttons, Icons, hover and focus states</Text>\n        </ColorBox>\n        <ColorBox name=\"standard\" title=\"White\">\n          <h4>White</h4>\n          <Text fontSize=\"small\">Surfaces, text for dark backgrounds, and creating contrast</Text>\n        </ColorBox>\n        <PaletteBox\n          title=\"LightContrast\"\n          colors={[\n            { bg: 'darkContrast', color: 'white' },\n            { bg: 'mediumContrast', color: 'white' },\n            { bg: 'lightContrast', color: 'darkestContrast' },\n          ]}\n        >\n          <h4>Light Contrast</h4>\n          <Text fontSize=\"small\">Zebra contrast, shadows, text field placeholder</Text>\n        </PaletteBox>\n        <ColorBox name=\"darkestContrast\">\n          <h4>Darkest Contrast</h4>\n          <Text fontSize=\"small\">Text</Text>\n        </ColorBox>\n        <ColorBox name=\"success\">\n          <h4>Green</h4>\n          <Text fontSize=\"small\">\n            Positive indicators, alert messages, action buttons, text fields, headlines, and icons\n          </Text>\n        </ColorBox>\n        <ColorBox name=\"error\">\n          <h4>Red</h4>\n          <Text fontSize=\"small\">\n            Negative indicators, alert messages, action buttons, text fields, headlines, and icons\n          </Text>\n        </ColorBox>\n        <ColorBox name=\"warning\">\n          <h4>Yellow</h4>\n          <Text fontSize=\"small\">\n            Moderate indicators, alert messages, action buttons, text fields, headlines, and icons\n          </Text>\n        </ColorBox>\n        <PaletteBox\n          title=\"Disable\"\n          colors={[\n            { bg: 'darkGray', color: 'white' },\n            { bg: 'mediumGray', color: 'white' },\n            { bg: 'lightGray', color: 'darkestContrast' },\n          ]}\n        >\n          <h4>Gray</h4>\n          <Text fontSize=\"small\">\n            Neutral indicators, alert messages, action buttons, text fields, headlines, and icons\n          </Text>\n        </PaletteBox>\n      </Box>\n      <p>TODO: Accessibility charts</p>\n      <p>\n        Next, we will review the <Link to=\"/design-system/typography/\">typography</Link>.\n      </p>\n    </>\n  )\n}\n"],"sourceRoot":""}