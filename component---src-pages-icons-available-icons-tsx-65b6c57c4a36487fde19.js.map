{"version":3,"file":"component---src-pages-icons-available-icons-tsx-65b6c57c4a36487fde19.js","mappings":"0NAoCA,MAAMA,GAAOC,EAAAA,EAAAA,SAAO,KAAVC,WAAA,+CAAGD,CACXE,EAAAA,GACAC,EAAAA,EACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,IAGWC,EAAOb,EAAKc,cAAc,aAAhC,mbAEP,gc,eCzCA,MAAMC,EAAoD,CAAC,EAErDC,EAAQC,OAAOC,QAAQC,EAAAA,IAAWC,QAAOC,IAAAA,IAAEC,GAAFD,EAAAA,MAA8B,cAATC,CAArB,IAE/C,IAAK,MAAOC,EAAUC,KAASR,EAAO,CACpC,MAAMS,EAAOF,EAASG,QAAQ,aAAc,SAASC,eAC9CC,KAAaC,GAAWJ,EAAKK,MAAM,KACpCR,EAAOO,EAAQE,KAAK,KACrBhB,EAAiBiB,eAAeJ,KACnCb,EAAiBa,GAAY,IAE/Bb,EAAiBa,GAAUK,KAAK,CAC9BX,OACAC,WACAE,OACAG,WACAJ,QAIJ,OAAMU,EAAajB,OAAOkB,KAAKpB,GAAkBqB,YAAjD,u5BCtBA,MAAMC,EAAOpC,EAAAA,QAAOqC,KAAVpC,WAAA,CAAAqC,YAAAA,wBAAAC,YAAAA,eAAGvC,CAAH,yCAKJwC,EAAMxC,EAAAA,QAAOyC,IAAVxC,WAAA,CAAAqC,YAAAA,uBAAAC,YAAAA,eAAGvC,CAAH,8DACK0C,GAAcA,EAAEC,MAAMzC,MAAM,KACnBwC,GAAcA,EAAEC,MAAMC,OAAOC,YAI9CC,EAAsB,uNAU1BC,OAEIC,EAAsB,oRAW1BD,OAEF,UACEE,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAAA,EAAD,CAAQC,MAAM,oBACdF,EAAAA,cAAClD,EAAD,CAAMqD,GAAG,KAAKjD,SAAS,MAAvB,mBAGA8C,EAAAA,cAAClD,EAAD,+EACAkD,EAAAA,cAAClD,EAAD,+BACAkD,EAAAA,cAACT,EAAD,KAAMM,GACNG,EAAAA,cAAClD,EAAD,mCACAkD,EAAAA,cAACT,EAAD,KAAMQ,GACNC,EAAAA,cAAClD,EAAD,2GAICkC,EAAWoB,KAAKC,IACf,MAAMC,EAAWzC,EAAiBwC,GAClC,OACEL,EAAAA,cAACA,EAAAA,SAAD,CAAgBO,IAAKF,GACnBL,EAAAA,cAAClD,EAAD,CAAMqD,GAAG,KAAKjD,SAAS,KAAKsD,MAAO,CAAEC,cAAe,eACjDJ,GAEHL,EAAAA,cAACU,EAAAA,GAAD,CAAMC,SAAS,OAAOC,eAAe,SAClCN,EAASF,KACRjC,IAAA,IAAC,SAAEE,EAAF,KAAYE,EAAZ,KAAkBD,GAAnBH,EAAA,OACE6B,EAAAA,cAACU,EAAAA,GAAD,CAAMH,IAAKhC,EAAMsC,EAAG,EAAGC,UAAU,OAAOC,cAAc,SAASC,WAAW,UACxEhB,EAAAA,cAAC1B,EAAD,CAAMkC,MAAO,CAAEtD,SAAU,UACzB8C,EAAAA,cAAClD,EAAD,CAAM+D,EAAG,EAAG3D,SAAS,QAClBmB,GAEH2B,EAAAA,cAACb,EAAD,WAAUZ,GANd,KAPR,I","sources":["webpack://docs-website/./src/components/Text.tsx","webpack://docs-website/./src/helpers/iconGroups.ts","webpack://docs-website/./src/pages/icons/available-icons.tsx"],"sourcesContent":["import styled from 'styled-components'\nimport {\n  color,\n  ColorProps,\n  colorStyle,\n  ColorStyleProps,\n  fontFamily,\n  FontFamilyProps,\n  fontSize,\n  FontSizeProps,\n  fontStyle,\n  FontStyleProps,\n  fontWeight,\n  FontWeightProps,\n  letterSpacing,\n  LetterSpacingProps,\n  lineHeight,\n  LineHeightProps,\n  space,\n  SpaceProps,\n  textAlign,\n  TextAlignProps,\n} from 'styled-system'\n\ninterface TextProps\n  extends SpaceProps,\n    FontSizeProps,\n    ColorProps,\n    ColorStyleProps,\n    FontFamilyProps,\n    FontWeightProps,\n    TextAlignProps,\n    FontStyleProps,\n    LineHeightProps,\n    LetterSpacingProps {}\n\nconst Text = styled('p')<TextProps>(\n  space,\n  fontSize,\n  color,\n  colorStyle,\n  fontFamily,\n  fontWeight,\n  textAlign,\n  fontStyle,\n  lineHeight,\n  letterSpacing\n)\n\nexport const Span = Text.withComponent('span')\n\nexport default Text\n","import iconsList from '@repay/cactus-icons'\n\ninterface IconObject {\n  name: string\n  fullName: string\n  path: string\n  category: string\n  Icon: React.ComponentType<any>\n}\n\nconst iconsCategoryMap: { [key: string]: IconObject[] } = {}\n\nconst icons = Object.entries(iconsList).filter(([name]): boolean => name !== 'iconSizes')\n\nfor (const [fullName, Icon] of icons) {\n  const path = fullName.replace(/(.)([A-Z])/, '$1-$2').toLowerCase()\n  const [category, ...nameArr] = path.split('-')\n  const name = nameArr.join(' ')\n  if (!iconsCategoryMap.hasOwnProperty(category)) {\n    iconsCategoryMap[category] = []\n  }\n  iconsCategoryMap[category].push({\n    name,\n    fullName,\n    path,\n    category,\n    Icon,\n  })\n}\n\nconst categories = Object.keys(iconsCategoryMap).sort()\n\nexport { iconsCategoryMap, categories }\n","import { Flex } from '@repay/cactus-web'\nimport * as React from 'react'\nimport { Helmet } from 'react-helmet'\nimport styled from 'styled-components'\n\nimport Text from '../../components/Text'\nimport { categories, iconsCategoryMap } from '../../helpers/iconGroups'\n\nconst Code = styled.code`\n  white-space: nowrap;\n  font-size: 9.6px;\n`\n\nconst Pre = styled.pre`\n  padding: ${(p): string => p.theme.space[4]}px;\n  background-color: ${(p): string => p.theme.colors.lightGray};\n  white-space: pre-line;\n`\n\nconst importFromRootCode = `\nimport * as React from 'react'\nimport { ActionsAdd, ActionsDelete } from '@repay/cactus-icons'\n\nexport default () => (\n  <React.Fragment>\n    <ActionsAdd />\n    <ActionsDelete />\n  </React.Fragment>\n)\n`.trim()\n\nconst importIndividually = `\nimport * as React from 'react'\nimport ActionsAdd from '@repay/cactus-icons/i/actions-add'\nimport ActionsDelete from '@repay/cactus-icons/i/actions-delete'\n\nexport default () => (\n  <React.Fragment>\n    <ActionsAdd />\n    <ActionsDelete />\n  </React.Fragment>\n)\n`.trim()\n\nexport default (): React.ReactElement => (\n  <>\n    <Helmet title=\"Available Icons\" />\n    <Text as=\"h1\" fontSize=\"h1\">\n      Available Icons\n    </Text>\n    <Text>The icon library allows icons to be imported in two different manners.</Text>\n    <Text>From the root by name:</Text>\n    <Pre>{importFromRootCode}</Pre>\n    <Text>Individually by file path:</Text>\n    <Pre>{importIndividually}</Pre>\n    <Text>\n      See below for the list of available icons and the names and paths by which they can be\n      referenced.\n    </Text>\n    {categories.map((cat): React.ReactElement => {\n      const iconList = iconsCategoryMap[cat]\n      return (\n        <React.Fragment key={cat}>\n          <Text as=\"h3\" fontSize=\"h3\" style={{ textTransform: 'capitalize' }}>\n            {cat}\n          </Text>\n          <Flex flexWrap=\"wrap\" justifyContent=\"start\">\n            {iconList.map(\n              ({ fullName, path, Icon }): React.ReactElement => (\n                <Flex key={path} m={4} flexBasis=\"64px\" flexDirection=\"column\" alignItems=\"center\">\n                  <Icon style={{ fontSize: '40px' }} />\n                  <Text m={0} fontSize=\"12px\">\n                    {fullName}\n                  </Text>\n                  <Code>/i/{path}</Code>\n                </Flex>\n              )\n            )}\n          </Flex>\n        </React.Fragment>\n      )\n    })}\n  </>\n)\n"],"names":["Text","styled","withConfig","space","fontSize","color","colorStyle","fontFamily","fontWeight","textAlign","fontStyle","lineHeight","letterSpacing","Span","withComponent","iconsCategoryMap","icons","Object","entries","iconsList","filter","_ref","name","fullName","Icon","path","replace","toLowerCase","category","nameArr","split","join","hasOwnProperty","push","categories","keys","sort","Code","code","displayName","componentId","Pre","pre","p","theme","colors","lightGray","importFromRootCode","trim","importIndividually","React","Helmet","title","as","map","cat","iconList","key","style","textTransform","Flex","flexWrap","justifyContent","m","flexBasis","flexDirection","alignItems"],"sourceRoot":""}