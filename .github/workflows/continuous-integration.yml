name: CI Pipeline
on:
  push:
    branches:
    - '**'
    tags-ignore:
      - '**'

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: NodeJS Version
        shell: bash
        run: node --version

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Build Modules
        uses: ./.github/actions/cactus-build

  unit-tests:
    runs-on: ubuntu-20.04
    needs: build
    
    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Download built modules
        uses: ./.github/actions/download-dist-artifacts

      - name: Test Modules
        run: |
          yarn theme test:ci
          yarn fwk test:ci
          yarn i18n test:ci
          yarn form test:ci
          yarn icons test:ci
          yarn web test:ci

  integration-tests:
    runs-on: ubuntu-20.04
    needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Download built modules
        uses: ./.github/actions/download-dist-artifacts

      - name: Integration Tests
        uses: ./actions/integration-tests
        env:
          BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
  
  visual-tests:
    runs-on: ubuntu-20.04
    needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Download built modules
        uses: ./.github/actions/download-dist-artifacts

      - name: Visual Tests
        uses: ./actions/storyshots

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Create Pull Request
        uses: ./actions/create-pull-request
        with:
          branch: ${{ steps.extract_branch.outputs.branch }}-patch

  docs-test:
    runs-on: ubuntu-20.04
    needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Download built modules
        uses: ./.github/actions/download-dist-artifacts

      - name: Test Docs Website
        run: yarn docs test:ci
  publish_docs:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2

    - name: Decrypt secrets
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        openssl aes-256-cbc -in .github/workflows/secrets/cactus_auth.enc -out .github/workflows/secrets/cactus_auth -pass pass:$SSH_PRIVATE_KEY -d -md sha1

    - name: Setup SSH agent
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts

        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        chmod 0600 .github/workflows/secrets/cactus_auth
        ssh-add .github/workflows/secrets/cactus_auth

    - name: Git Authentication
      env: 
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: git remote set-url origin git@github.com:repaygithub/cactus.git

    - name: Install Packages
      run: yarn install --immutable

    - name: Build Packages
      run: yarn build

    - name: Build Documentation Site
      run: yarn docs build
      env:
        NODE_OPTIONS: "--max_old_space_size=4096"

    - name: Deploy with gh-pages
      run: yarn gh-pages -d ./website/public -u "repayci <repayci@repay.com>"
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        NODE_OPTIONS: "--max_old_space_size=4096"

    - name: Cleanup
      if: always()
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: |
        ssh-add -D
        rm -Rf *
